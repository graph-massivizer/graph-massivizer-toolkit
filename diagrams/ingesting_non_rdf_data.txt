participantgroup :0
participant Inceptor_User

participantgroup :0
participant MessageBroker

particpant 
participantgroup #lightyellow **Data Sources**
participant External_Data
participant File/Memory
end

particpant 
participantgroup #lightgrey **Graph-Inceptor**
participant ETL_Pipeline
participant GraphMa
end

Inceptor_User->MessageBroker:request:broadcast(req_id, graph_id)
MessageBroker->GraphMa:request(req_id, graph_id)

group #2f2e7b ingestion loop #white [Implemented traverser exists]
GraphMa->External_Data:read()
GraphMa->GraphMa:process()
GraphMa->File/Memory:write/update()
end

group #2f2e7b conversion loop #white [Implemented converter exists]
GraphMa->External_Data:read()
GraphMa->GraphMa:process()
GraphMa->File/Memory:write/update()
end

GraphMa-->MessageBroker:graph_for_id:broadcast(req_id, graph_id)
MessageBroker-->Inceptor_User:graph_for_id(req_id, graph_id)

MessageBroker->GraphMa:request(req_id, graph_id)
GraphMa->GraphMa:possible_graphs_for_id(graph_id)
GraphMa-->MessageBroker:graphs-for-id: broadcast(req_id, graphs_for_graph_id)
MessageBroker-->Inceptor_User:graphs-for-id(req_id, graphs_for_graph_id)
